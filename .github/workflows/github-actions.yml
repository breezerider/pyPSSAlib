name: build
on: [push, pull_request]
jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'check'
            python: '3.11'
            toxpython: 'python3.11'
            tox_env: 'check'
            os: 'ubuntu-latest'
          - name: 'docs'
            python: '3.11'
            toxpython: 'python3.11'
            tox_env: 'docs'
            os: 'ubuntu-latest'
          - name: 'py38 (ubuntu/x86_64)'
            python: '3.8'
            toxpython: 'python3.8'
            python_arch: 'x64'
            tox_env: 'py38'
            cibw_arch: 'x86_64'
            cibw_build: 'cp38-*manylinux*'
            os: 'ubuntu-latest'
          # - name: 'py38 (windows/AMD64)'
          #   python: '3.8'
          #   toxpython: 'python3.8'
          #   python_arch: 'x64'
          #   tox_env: 'py38'
          #   cibw_arch: 'AMD64'
          #   cibw_build: false
          #   os: 'windows-latest'
          - name: 'py38 (macos/x86_64)'
            python: '3.8'
            toxpython: 'python3.8'
            python_arch: 'x64'
            tox_env: 'py38'
            cibw_arch: 'x86_64'
            cibw_build: 'cp38-*'
            os: 'macos-13'
          - name: 'py38 (macos/arm64)'
            python: '3.8'
            toxpython: 'python3.8'
            python_arch: 'arm64'
            tox_env: 'py38'
            cibw_arch: 'arm64'
            cibw_build: 'cp38-*'
            os: 'macos-14'
          - name: 'py39 (ubuntu/x86_64)'
            python: '3.9'
            toxpython: 'python3.9'
            python_arch: 'x64'
            tox_env: 'py39'
            cibw_arch: 'x86_64'
            cibw_build: 'cp39-*manylinux*'
            os: 'ubuntu-latest'
          # - name: 'py39 (windows/AMD64)'
          #   python: '3.9'
          #   toxpython: 'python3.9'
          #   python_arch: 'x64'
          #   tox_env: 'py39'
          #   cibw_arch: 'AMD64'
          #   cibw_build: false
          #   os: 'windows-latest'
          - name: 'py39 (macos/x86_64)'
            python: '3.9'
            toxpython: 'python3.9'
            python_arch: 'x64'
            tox_env: 'py39'
            cibw_arch: 'x86_64'
            cibw_build: 'cp39-*'
            os: 'macos-13'
          - name: 'py39 (macos/arm64)'
            python: '3.9'
            toxpython: 'python3.9'
            python_arch: 'arm64'
            tox_env: 'py39'
            cibw_arch: 'arm64'
            cibw_build: 'cp39-*'
            os: 'macos-14'
          - name: 'py310 (ubuntu/x86_64)'
            python: '3.10'
            toxpython: 'python3.10'
            python_arch: 'x64'
            tox_env: 'py310'
            cibw_arch: 'x86_64'
            cibw_build: 'cp310-*manylinux*'
            os: 'ubuntu-latest'
          # - name: 'py310 (windows/AMD64)'
          #   python: '3.10'
          #   toxpython: 'python3.10'
          #   python_arch: 'x64'
          #   tox_env: 'py310'
          #   cibw_arch: 'AMD64'
          #   cibw_build: false
          #   os: 'windows-latest'
          - name: 'py310 (macos/x86_64)'
            python: '3.10'
            toxpython: 'python3.10'
            python_arch: 'x64'
            tox_env: 'py310'
            cibw_arch: 'x86_64'
            cibw_build: 'cp310-*'
            os: 'macos-13'
          - name: 'py310 (macos/arm64)'
            python: '3.10'
            toxpython: 'python3.10'
            python_arch: 'arm64'
            tox_env: 'py310'
            cibw_arch: 'arm64'
            cibw_build: 'cp310-*'
            os: 'macos-14'
          - name: 'py311 (ubuntu/x86_64)'
            python: '3.11'
            toxpython: 'python3.11'
            python_arch: 'x64'
            tox_env: 'py311'
            cibw_arch: 'x86_64'
            cibw_build: 'cp311-*manylinux*'
            os: 'ubuntu-latest'
          # - name: 'py311 (windows/AMD64)'
          #   python: '3.11'
          #   toxpython: 'python3.11'
          #   python_arch: 'x64'
          #   tox_env: 'py311'
          #   cibw_arch: 'AMD64'
          #   cibw_build: false
          #   os: 'windows-latest'
          - name: 'py311 (macos/x86_64)'
            python: '3.11'
            toxpython: 'python3.10'
            python_arch: 'x64'
            tox_env: 'py311'
            cibw_arch: 'x86_64'
            cibw_build: 'cp311-*'
            os: 'macos-13'
          - name: 'py311 (macos/arm64)'
            python: '3.11'
            toxpython: 'python3.11'
            python_arch: 'arm64'
            tox_env: 'py311'
            cibw_arch: 'arm64'
            cibw_build: 'cp311-*'
            os: 'macos-14'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5.1.0
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.python_arch }}
    - uses: knicknic/os-specific-run@v1.0.4
      if: >
        !matrix.cibw_build
      with:
        macos: ci/${{ matrix.os }}-brew.sh
        linux: ci/${{ matrix.os }}.sh
        windows: .\ci\${{ matrix.os }}.ps1
    - name: install dependencies
      run: |
        python -mpip install --progress-bar=off cibuildwheel -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze
    - name: cibw build and test
      if: matrix.cibw_build
      run: cibuildwheel
      env:
        TOXPYTHON: '${{ matrix.toxpython }}'
        CIBW_ARCHS: '${{ matrix.cibw_arch }}'
        CIBW_BUILD: '${{ matrix.cibw_build }}'
        CIBW_ARCHS_MACOS: "${{ matrix.cibw_arch }}"
        CIBW_BUILD_VERBOSITY: '3'
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
        CIBW_BEFORE_ALL_LINUX: >
          ci/manylinux.sh
        CIBW_BEFORE_ALL_MACOS: >
          ci/${{ matrix.os }}-build.sh
        CIBW_TEST_REQUIRES: >
          tox
          tox-direct
        CIBW_TEST_COMMAND: >
          cd {project} &&
          tox --skip-pkg-install --direct-yolo -e ${{ matrix.tox_env }} -v
        CIBW_TEST_COMMAND_WINDOWS: >
          cd /d {project} &&
          tox --skip-pkg-install --direct-yolo -e ${{ matrix.tox_env }} -v
    - name: regular build and test
      env:
        TOXPYTHON: '${{ matrix.toxpython }}'
      if: >
        !matrix.cibw_build
      run: >
        tox -e ${{ matrix.tox_env }} -v
    - name: check wheel
      if: matrix.cibw_build
      run: twine check wheelhouse/*.whl
    - name: upload wheel
      uses: actions/upload-artifact@v4
      if: matrix.cibw_build
      with:
        name: '${{ matrix.tox_env }}_${{ matrix.os }}_${{ matrix.cibw_arch }}'
        path: wheelhouse/*.whl
        overwrite: false

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0
      - name: Build sdist
        run: |
          python -mpip install --progress-bar=off pipx
          pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: 'source'
          path: dist/*.tar.gz
